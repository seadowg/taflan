defaultTasks 'clean', 'lintDebug', 'testDebug', 'connectedAndroidTest'

static def versionNumber() {
    def gitCount = "git rev-list HEAD --count".execute().text.trim()

    if (gitCount != "") {
        gitCount.toInteger()
    } else {
        0
    }
}

buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        jcenter()
        mavenCentral()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    jcenter()
    mavenCentral()
    google()

    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
        versionCode versionNumber()
        versionName "1.0.0"
        applicationId "com.seadowg.taflan"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions.unitTests.includeAndroidResources true
}

configurations.all { config ->
    if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

dependencies {
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.github.salomonbrys.kodein:kodein:3.3.0'
    implementation 'com.google.code.gson:gson:2.8.0'

    implementation 'org.apache.commons:commons-csv:1.3'

    // Android
    implementation 'com.android.support:support-v4:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.github.clans:fab:1.6.4'

    testImplementation 'org.assertj:assertj-core:3.9.0'

    // Robolectric
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1' // Fix for https://github.com/robolectric/robolectric/issues/2566

    // Espresso
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1')  {
        exclude module: 'support-annotations'
    }
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'

    androidTestImplementation(name:'macchiato-0.4.0', ext:'aar')
}
