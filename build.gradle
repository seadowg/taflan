defaultTasks 'clean', 'lintDebug', 'testDebug', 'connectedAndroidTest'

static def versionNumber() {
    def gitCount = "git rev-list HEAD --count".execute().text.trim()

    if (gitCount != "") {
        gitCount.toInteger()
    } else {
        0
    }
}

buildscript {
    ext.kotlin_version = '1.2.61'

    repositories {
        jcenter()
        mavenCentral()
        google()

        maven {
            url 'https://maven.fabric.io/public'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0-alpha07'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:3.2.0'
        classpath 'io.fabric.tools:gradle:1.25.4'
        classpath "com.google.android.gms:oss-licenses-plugin:0.9.3"

    }
}

repositories {
    jcenter()
    mavenCentral()
    google()

    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

android {
    compileSdkVersion 28
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode versionNumber()
        versionName "1.0.${versionNumber()}"
        applicationId "com.seadowg.taflan"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions.unitTests.includeAndroidResources true
}

dependencies {
    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.github.salomonbrys.kodein:kodein:3.3.0'
    implementation 'com.google.code.gson:gson:2.8.4'

    implementation 'org.apache.commons:commons-csv:1.3'

    // Android
    implementation 'com.google.android.material:material:1.0.0-rc01'
    implementation 'com.google.android.gms:play-services-oss-licenses:16.0.0'
    implementation 'androidx.core:core-ktx:1.0.0-rc01'
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0-rc01"


    testImplementation 'org.assertj:assertj-core:3.9.0'

    implementation 'androidx.annotation:annotation:1.0.0-rc01'

    // Robolectric
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation "org.robolectric:robolectric:4.0-alpha-3"
    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation "org.robolectric:shadows-supportv4:4.0-alpha-3"

    // Espresso
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4')
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0-alpha4'

    androidTestImplementation(name: 'macchiato-0.4.0', ext: 'aar')
}

apply plugin: 'com.google.gms.google-services'
